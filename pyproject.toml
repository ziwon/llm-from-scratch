[project]
name = "llm-from-scratch"
version = "0.1.0"
description = "Building a Large Language Model from Scratch"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "torch>=2.7.0",
    "torchvision>=0.22.0",
    "torchaudio>=2.7.0",
    "tiktoken>=0.5.0",
    "numpy>=1.24.0",
    "tqdm>=4.65.0",
    "matplotlib>=3.7.0",
    "pyyaml>=6.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "tensorboard>=2.14.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "ipykernel>=6.25.0",
    "notebook>=7.0.0",
]
experiment = [
    "wandb>=0.15.0",
    "hydra-core>=1.3.0",
    "omegaconf>=2.3.0",
]
data = [
    "kaggle>=1.7.4.5",
]
[project.scripts]
llm-train = "llm_from_scratch.cli.train:app"
llm-generate = "llm_from_scratch.cli.generate:app"
llm-prepare = "llm_from_scratch.cli.prepare_data:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.ruff]
line-length = 88
target-version = "py311"
select = ["E", "F", "I", "N", "W", "B", "Q"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
addopts = "-v --cov=llm_from_scratch --cov-report=html"

[tool.uv.sources]
torch = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
torchvision = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
torchaudio = [
  { index = "pytorch-cu128", marker = "sys_platform == 'linux' or sys_platform == 'win32'" },
]
[[tool.uv.index]]
name = "pytorch-cu128"
url = "https://download.pytorch.org/whl/cu128"
explicit = true